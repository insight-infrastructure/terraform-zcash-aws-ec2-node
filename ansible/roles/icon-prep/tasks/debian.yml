---

- name: check if running on cloud
  stat:
    path: /var/lib/cloud
  register: cloud

- name: Wait for updates / upgrades from user data script to release lock
  script: wait-for-apt-on-startup.sh
  when: cloud.stat.exists

- name: Update and upgrade apt packages
  become: true
  apt:
    update_cache: yes
    upgrade: "yes" # Needs to be quoted
    force_apt_get: yes
    cache_valid_time: 86400 #One day

- name: Add Docker GPG key
  apt_key:
    url: https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg
    state: present

- name: Add Docker APT repository
  apt_repository:
    repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable

- name: Install required packages
  apt:
    name: "{{ packages }}"
    force_apt_get: yes
    state: present
  vars:
    packages:
      - apt-transport-https
      - ca-certificates
      - software-properties-common
      - python
      - python3
      - python-apt
      - python3-apt
      - python-pip
      - python3-pip
      - awscli
      - docker-ce
      - curl
      - jq
      - rsync

- name: Install required packages (Ubuntu only)
  apt:
    name: "{{ packages }}"
    force_apt_get: yes
    state: present
  vars:
    packages:
      - linux-aws
  when: ansible_distribution == 'Ubuntu'

- name: Create hard core limit file
  file:
    path: /etc/security/limits.d/10.hardcore.conf
    mode: '0644'
    state: touch
    owner: root
    group: root

# Credit fgimenez
- name: install ufw
  apt:
    name: ufw
    state: present
    update_cache: yes

- name: ufw already enabled
  command: ufw status verbose
  register: ufw_status_result
  changed_when: False

#
# Standard ports
#
- name: open ssh port
  command: ufw allow 22/tcp
  when: not ufw_status_result.stdout is search("22/tcp.*ALLOW IN.*Anywhere")

- name: open grpc port
  command: ufw allow 7100/tcp
  when: not ufw_status_result.stdout is search("7100/tcp.*ALLOW IN.*Anywhere")

- name: open jsonrpc port
  command: ufw allow 9000/tcp
  when: not ufw_status_result.stdout is search("9000/tcp.*ALLOW IN.*Anywhere")

#
# Exporters
#
# node
- name: open node_exporter port
  command: ufw allow 9100/tcp
  when:
    - node_exporter_enabled|default(false)|bool
    - not ufw_status_result.stdout is search("9100/tcp.*ALLOW IN.*Anywhere")

# nginx - jsonrpc
- name: open nginx_exporter jsonrpc port
  command: ufw allow 9113/tcp
  when:
    - nginx_exporter_enabled|default(false)|bool
    - not ufw_status_result.stdout is search("9113/tcp.*ALLOW IN.*Anywhere")
    - reverse_proxy_type == 'nginx'

# nginx - grpc
#- name: open nginx_exporter grpc port
#  command: ufw allow 9114/tcp
#  when:
#    - nginx_exporter_enabled|default(false)|bool
#    - not ufw_status_result.stdout is search("9114/tcp.*ALLOW IN.*Anywhere")
#    - reverse_proxy_type == 'nginx'

# blackbox
- name: open blackbox_exporter port
  command: ufw allow 9115/tcp
  when:
    - blackbox_exporter_enabled|default(false)|bool
    - not ufw_status_result.stdout is search("9115/tcp.*ALLOW IN.*Anywhere")

# blackbox
- name: open cadvisor port
  command: ufw allow 9115/tcp
  when:
    - blackbox_exporter_enabled|default(false)|bool
    - not ufw_status_result.stdout is search("9115/tcp.*ALLOW IN.*Anywhere")

- name: enable firewall
  shell: |
    set -o pipefail
    echo "y" | ufw enable
  args:
    executable: /bin/bash
  when: not ufw_status_result.stdout is search("Status.* active")

- name: copy journald config
  copy:
    src: journald.conf
    dest: /etc/systemd/journald.conf

- name: restart journald
  systemd:
    name: systemd-journald
    state: restarted
    daemon_reload: yes
    enabled: yes
  changed_when: false
