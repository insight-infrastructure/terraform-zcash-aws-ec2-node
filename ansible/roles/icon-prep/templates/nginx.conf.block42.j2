worker_processes 2;

events {
  worker_connections 512;
}

http {
  geo $limit {
    default 1;
  }
  map $limit $limit_key {
      0 "";
      1 $binary_remote_addr;
  }
  limit_req_zone $limit_key zone=LimitZoneAPI:10m rate=100r/s;

  map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
  }

  upstream prep-api {
    server prep:9000;
  }

  server {
    listen 9000;
    # listen [::]:9000;

    access_log /var/log/nginx/api_log combined;
    error_log /var/log/nginx/api_error_log error;

    # Apply throtteling
    limit_req zone=LimitZoneAPI burst=50 delay=10;

{% if nginx_exporter_enabled %}
    location /metrics {
      access_log   off;
      allow 127.0.0.1;
      stub_status on;
{#      deny all;#}
    }
{% endif %}

    location / {
      # Apply blacklist
      include /etc/nginx/access_lists/api_blacklist.conf;
      allow all;

      # Forward traffic
      proxy_pass http://prep-api;
      proxy_set_header X-Forwarded-For $remote_addr;
      proxy_set_header X-Forwarded-Host $host;

      # Websocket support
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }
  }
}

stream {
  limit_conn_zone $binary_remote_addr zone=LimitZoneGRPC:10m;

  upstream prep-grpc {
    server prep:7100;
  }

  log_format grpc_log 'Client IP: $remote_addr | Time: $time_local';

  server {
    listen 7100;
    # listen [::]:7100;

    access_log /var/log/nginx/grpc_log grpc_log;

    # Apply throtteling
    limit_conn LimitZoneGRPC 100;

    # Apply whitelist
    #include /etc/nginx/access_lists/grpc_whitelist.conf;
    #deny all;

    # Forward traffic
    proxy_pass prep-grpc;
  }

}
